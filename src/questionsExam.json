[
    {
      "question": "¿Qué palabra clave SQL indica la tabla origen de los datos?",
      "options": ["FROM", "WHERE", "SELECT", "JOIN"],
      "correct": 0,
      "explanation": "FROM especifica la tabla (o tablas) de la que se extraen los datos."
    },
    {
      "question": "¿Cuál de estas cláusulas SQL filtra filas antes de agrupar?",
      "options": ["WHERE", "HAVING", "GROUP BY", "ORDER BY"],
      "correct": 0,
      "explanation": "WHERE aplica la condición a filas individuales antes de cualquier agrupamiento."
    },
    {
      "question": "¿Qué palabra clave SQL limita el número de filas devueltas?",
      "options": ["LIMIT", "OFFSET", "FETCH", "TOP"],
      "correct": 0,
      "explanation": "LIMIT n devuelve solo las primeras n filas del conjunto de resultados."
    },
    {
      "question": "¿Qué comando SQL crea un índice para acelerar consultas?",
      "options": ["CREATE INDEX", "ADD INDEX", "MAKE INDEX", "NEW INDEX"],
      "correct": 0,
      "explanation": "CREATE INDEX nombre ON tabla(columna) crea un índice en esa columna."
    },
    {
      "question": "¿Qué hace DISTINCT en una consulta SELECT?",
      "options": ["Elimina duplicados", "Ordena los resultados", "Limita las filas", "Agrupa registros"],
      "correct": 0,
      "explanation": "DISTINCT garantiza que cada combinación de columnas aparezca solo una vez."
    },
    {
      "question": "¿Para qué sirve GROUP BY?",
      "options": ["Agrupar filas por valor de columna", "Filtrar filas antes de SELECT", "Ordenar el resultado", "Crear vistas"],
      "correct": 0,
      "explanation": "GROUP BY agrupa registros que comparten valores comunes para funciones agregadas."
    },
    {
      "question": "En SQL, ¿qué hace INNER JOIN?",
      "options": ["Devuelve filas comunes de ambas tablas", "Devuelve todas las filas de la izquierda", "Devuelve todas las filas de la derecha", "Devuelve un cruce cartesiano"],
      "correct": 0,
      "explanation": "INNER JOIN solo incluye filas que cumplan la condición en ambas tablas."
    },
    {
      "question": "¿Qué diferencia hay entre LEFT JOIN y RIGHT JOIN?",
      "options": ["Incluye todas las de la izquierda o de la derecha respectivamente", "No hay diferencia", "Uniendo en orden inverso", "LEFT filtra, RIGHT agrupa"],
      "correct": 0,
      "explanation": "LEFT JOIN incluye todas las filas de la tabla izquierda y las coincidentes de la derecha; RIGHT JOIN al revés."
    },
    {
      "question": "¿Cuál es la primera forma normal (1NF)?",
      "options": ["Valores atómicos en cada celda", "Eliminar dependencias parciales", "Eliminar dependencias transitivas", "Crear claves foráneas"],
      "correct": 0,
      "explanation": "1NF exige que cada columna almacene un único valor indivisible."
    },
    {
      "question": "¿Qué es un clúster en big data?",
      "options": ["Un conjunto de datos que comparten tendencias", "Una tabla particionada", "Un índice distribuido", "Un tipo de consulta"],
      "correct": 0,
      "explanation": "se refiere a un grupo de datos o puntos que comparten similitudes entre sí y son distintos de otros grupos"
    },
    {
      "question": "¿Qué comando MongoDB inserta múltiples documentos a la vez?",
      "options": ["insertMany()", "insert()", "insertOne()", "bulkWrite()"],
      "correct": 0,
      "explanation": "insertMany(array) agrega varios documentos en una sola operación."
    },
    {
      "question": "¿Qué método MongoDB recupera documentos según un filtro?",
      "options": ["find()", "get()", "query()", "aggregate()"],
      "correct": 0,
      "explanation": "find(filter) devuelve un cursor con los documentos que coinciden con filter."
    },
    {
      "question": "¿Para qué sirve $match en un pipeline de agregación?",
      "options": ["Filtrar documentos", "Modificar documentos", "Crear índices", "Eliminar documentos"],
      "correct": 0,
      "explanation": "$match en aggregation filtra documentos como WHERE en SQL."
    },
    {
      "question": "¿Qué operador MongoDB descompone arrays en documentos individuales?",
      "options": ["$unwind", "$split", "$project", "$group"],
      "correct": 0,
      "explanation": "$unwind convierte un documento con un array en varios documentos, uno por elemento."
    },
    {
      "question": "¿Cuál es la ventaja de $lookup en MongoDB?",
      "options": ["Simular JOIN entre colecciones", "Ordenar documentos", "Eliminar duplicados", "Crear índices"],
      "correct": 0,
      "explanation": "$lookup permite combinar datos de distintas colecciones pareciendo un JOIN SQL."
    },
    {
      "question": "¿Qué es un documento en MongoDB?",
      "options": ["Un objeto JSON/BSON", "Una fila en SQL", "Un índice", "Una vista"],
      "correct": 0,
      "explanation": "Un documento JSON/BSON almacena datos en pares clave-valor dentro de una colección."
    },
    {
      "question": "¿Qué garantiza la consistencia eventual en NoSQL?",
      "options": ["Que todas las réplicas converjan con el tiempo", "Actualización instantánea en todas las réplicas", "Transacciones ACID", "Esquema fijo"],
      "correct": 0,
      "explanation": "Consistency eventual permite que las réplicas se sincronicen con el tiempo, no inmediatamente."
    },
    {
      "question": "¿Qué palabra clave SQL borra filas que cumplen una condición?",
      "options": ["DELETE FROM", "REMOVE FROM", "TRUNCATE", "DROP"],
      "correct": 0,
      "explanation": "DELETE FROM tabla WHERE condición elimina solo las filas que coinciden."
    },
    {
      "question": "¿Para qué sirve TRUNCATE TABLE?",
      "options": ["Borrar todo el contenido de la tabla rápidamente", "Eliminar la tabla", "Reiniciar ID", "Crear copia de seguridad"],
      "correct": 0,
      "explanation": "TRUNCATE TABLE borra todas las filas de forma más eficiente que DELETE sin WHERE."
    },
    {
      "question": "¿Qué es una clave primaria?",
      "options": ["Un identificador único de cada fila", "Un índice secundario", "Una vista materializada", "Un tipo de transacción"],
      "correct": 0,
      "explanation": "La clave primaria identifica de manera única cada registro en la tabla."
    },
    {
      "question": "¿Qué hace COMMIT en una transacción SQL?",
      "options": ["Confirma los cambios de la transacción", "Revierte la transacción", "Inicia una transacción", "Bloquea la tabla"],
      "correct": 0,
      "explanation": "COMMIT guarda de forma permanente todas las operaciones realizadas en la transacción."
    },
    {
      "question": "¿Qué comando revierte cambios en una transacción?",
      "options": ["ROLLBACK", "UNDO", "REVERT", "ABORT"],
      "correct": 0,
      "explanation": "ROLLBACK deshace todas las operaciones de la transacción actual."
    },
    {
      "question": "¿Qué operador SQL une dos conjuntos de resultados sin duplicados?",
      "options": ["UNION", "JOIN", "INTERSECT", "EXCEPT"],
      "correct": 0,
      "explanation": "UNION combina dos SELECT eliminando duplicados de filas idénticas."
    },
    {
      "question": "¿Qué hace EXPLAIN en una consulta SQL?",
      "options": ["Muestra el plan de ejecución", "Ejecuta la consulta", "Optimiza índices", "Limita filas"],
      "correct": 0,
      "explanation": "EXPLAIN muestra cómo el motor de base de datos planea ejecutar la consulta."
    },
    {
      "question": "¿Qué operador MongoDB ordena resultados?",
      "options": ["sort()", "orderBy()", "rank()", "sequence()"],
      "correct": 0,
      "explanation": "sort({ campo: 1 }) ordena ascendente; -1 lo haría descendente."
    },
    {
      "question": "¿Qué método MongoDB omite un número de documentos?",
      "options": ["skip()", "limit()", "filter()", "slice()"],
      "correct": 0,
      "explanation": "skip(n) ignora los primeros n documentos antes de devolver resultados."
    },
    {
      "question": "¿Qué pipeline almacena resultados en otra colección?",
      "options": ["$out", "$merge", "$persist", "$writeTo"],
      "correct": 0,
      "explanation": "$out escribe los resultados completos en la colección indicada, reemplazándola."
    },
    {
      "question": "¿Qué propiedad CAP elige NoSQL para alta disponibilidad?",
      "options": ["A (Availability)", "C (Consistency)", "P (Partition tolerance)", "T (Transactions)"],
      "correct": 0,
      "explanation": "Muchas bases NoSQL priorizan la disponibilidad y tolerancia a particiones sobre consistencia fuerte."
    },
    {
      "question": "¿Qué técnica usa MongoDB para shardear datos?",
      "options": ["Sharding por rango o por hashed key", "Particionamiento vertical", "Replicación primaria-simple", "Clustering físico"],
      "correct": 0,
      "explanation": "MongoDB puede shardear colecciones por rango de valores o por un hash de la clave."
    }
  ]